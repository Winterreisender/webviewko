name: Build Release JAR

on: [ push ]

jobs:
  build-windows-test:
    runs-on: windows-latest
    steps:
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
            - name: Build with Maven
              run: mvn -B clean test --file pom.xml
  build-macos-test:
    runs-on: macos-latest
    steps:
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
                          - name: Build with Maven
                          run: mvn -B clean test --file pom.xml
  build-linux-test:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
                          - name: Build with Maven
                          run: mvn -B clean test --file pom.xml
  build-release:
    runs-on: windows-latest
    steps:
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B clean install --file pom.xml
      - name: Update Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN}}"
          automatic_release_tag: "Release Build"
          prerelease: true
          title: "Release Build"
          files: ./target/*.jar
